{"version":3,"sources":["functionBased/components/TodoItem.module.css","pages/SinglePage.js","pages/About.js","pages/NotMatch.js","functionBased/components/TodoItem.js","functionBased/components/TodosList.js","functionBased/components/Header.js","functionBased/components/InputTodo.js","functionBased/components/Navbar.js","functionBased/components/TodoContainer.js","index.js"],"names":["module","exports","SinglePage","console","log","useParams","slug","aboutContent","title","description","find","item","className","About","useRouteMatch","url","path","to","NotMatch","TodoItem","props","useState","editing","setEditing","useEffect","todo","completed","id","viewMode","editMode","display","styles","onDoubleClick","style","type","checkbox","checked","onChange","handleChangeProps","onClick","deleteTodoProps","color","fontSize","fontStyle","opacity","textDecoration","textInput","value","e","setUpdate","target","onKeyDown","event","key","TodosList","todos","map","Header","padding","lineHeight","fontWeight","marginBottom","textTransform","textAlign","InputTodo","inputText","setInputText","onSubmit","preventDefault","trim","addTodoProps","alert","placeholder","name","marginTop","Navbar","navbarOpen","setNavbarOpen","prev","width","height","text","link","activeClassName","exact","TodoContainer","temp","localStorage","getItem","JSON","parse","getInitialTodos","setTodos","stringify","setItem","newTodo","uuidv4","prevState","filter","updatedTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d71ef3ed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__3MbaD\",\"checkbox\":\"TodoItem_checkbox__2Jrs8\",\"textInput\":\"TodoItem_textInput__t35cu\"};","import React from \"react\"\nimport { useParams } from \"react-router-dom\"  //hook that gives access to the params of the current <Route>\n\nconst SinglePage = () => {\n  console.log(useParams())\n\n  const aboutData = [\n    {\n      slug: \"about-app\",\n      title: \"About the App\",\n      description: \"In this app, you can add, delete, submit and edit items. \" +\n                   \"To edit items, simply double click on it. Once you are \" +\n                   \"done, press the enter key to resubmit. This app will \" +\n                   \"persist your data in the browser local storage. So whether \" +\n                   \"you reload, close your app or reopened it, you still have \" +\n                   \"access to your to-dos items.\",\n    },\n    {\n      slug: \"about-author\",\n      title: \"About the Author\",\n      description: \"This app was developed by Ibas Majid, a self-taught web \" +\n                   \"developer and a technical writer. He is opened to \" +\n                   \"freelance Gig. So go ahead and connect with ibas \" +\n                   \"on Twitter @ibaslogic.\",\n    }\n  ]\n\n  const { slug } = useParams()\n  const aboutContent = aboutData.find((item) => item.slug === slug) //find() returns the first object in the array whose slug matches current page slug\n  const { title, description } = aboutContent   //object w/ title and desc destructs aboutContent and selects title and desc from aboutData\n\n  return (\n    <div className=\"main__content\">\n      <h1>{title}</h1>\n      <p>{description}</p>\n    </div>\n  )\n}\n\nexport default SinglePage\n","import React from 'react'\nimport { Link, useRouteMatch, Route } from \"react-router-dom\"\nimport SinglePage from \"./SinglePage\"\n\nconst About = () => {\n  const { url, path } = useRouteMatch()   //useRouteMatch() provides access to the match object\n  console.log(useRouteMatch())\n\n  //url is part of an object taken from the match object\n  //it is used to create a nested link\n  //${path} is /about. It is used to create a nested route\n  //\":slug\" matches anything after /about/, so it corresponds to /about/about-app\n  //SinglePage is child element. We have access to the :slug through SinglePage\n  return (\n    <div className=\"about__content\">\n      <ul className=\"about__list\">\n        <li>\n          <Link to={`${url}/about-app`}>About App</Link>\n        </li>\n        <li>\n          <Link to={`${url}/about-author`}>About Author</Link>\n        </li>\n      </ul>\n        <Route path={`${path}/:slug`}>\n          <SinglePage />\n        </Route>\n    </div>\n  )\n}\n\nexport default About\n","import React from \"react\"\n\nconst NotMatch = () => {\n  return (\n    <div>\n      <h3>No match for this page</h3>\n    </div>\n  )\n}\n\nexport default NotMatch\n","import React, { useState, useEffect } from \"react\"\nimport { FaTrash } from \"react-icons/fa\"\nimport styles from \"./TodoItem.module.css\"\n\nconst TodoItem = (props) => {\n  const [editing, setEditing] = useState(false)\n\n  //Anytime you return a function inside the useEffect Hook and then have\n  //no dependency in the array, the effect will run just once and the return\n  //function will be called when the component is about to unmount.\n  useEffect(() => {\n    return () => {\n      console.log(\"Cleaning up...\")\n    }\n  }, [])\n\n  const handleEditing = () => {\n    setEditing(true)\n  }\n\n  const handleUpdatedDone = (event) => {\n    if (event.key === \"Enter\") {\n      setEditing(false)\n    }\n  }\n\n  const completedStyle = {\n    fontStyle: \"italic\",\n    color: \"#595959\",\n    opacity: 0.4,\n    textDecoration: \"line-through\",\n  }\n\n  //defines completed, id, and title as variables so that they don't have\n  //to be referred to as props.todo.completed, props.todo.id, etc.\n  const { completed, id, title } = props.todo\n  let viewMode = {}\n  let editMode = {}\n\n  if (editing) {\n    viewMode.display = \"none\"\n  } else {\n    editMode.display = \"none\"\n  }\n\n  return(\n    <li className={styles.item}>\n      <div onDoubleClick={handleEditing} style={viewMode}>\n        <input\n          type=\"checkbox\"\n          className={styles.checkbox}\n          checked={completed}\n          onChange={() => props.handleChangeProps(id)}\n        />\n        <button onClick={() => props.deleteTodoProps(id)}>\n          <FaTrash style={{ color: \"orangered\", fontSize: \"16px\" }} />\n        </button>\n        <span style={completed ? completedStyle : null}>{title}</span>\n      </div>\n      <input\n        type=\"text\"\n        style={editMode}\n        className={styles.textInput}\n        value={title}\n        onChange={e => {\n          props.setUpdate(e.target.value, id)\n        }}\n        onKeyDown={handleUpdatedDone}\n        />\n    </li>\n  );\n}\n\nexport default TodoItem\n","import React from \"react\"\nimport TodoItem from \"./TodoItem\"\n\nconst TodosList = (props) => {\n  return (\n    <ul>\n      {props.todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handleChangeProps={props.handleChangeProps}\n          deleteTodoProps={props.deleteTodoProps}\n          setUpdate={props.setUpdate}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default TodosList\n","import React from \"react\";\n\n//function Header() {...}\n//style in React JSX uses {{}} and camelCase instead of hyphenation\nconst Header = () => {\n  const headerStyle = {\n    padding: \"20px 0\",\n    lineHeight: \"1.5em\",\n  }\n\n  return(\n    <header style={headerStyle}>\n      <h1\n        style={{\n          fontSize: \"6rem\",\n          fontWeight: \"600\",\n          marginBottom: \"2rem\",\n          lineHeight: \"1em\",\n          color: \"#ececec\",\n          textTransform: \"lowercase\",\n          textAlign: \"center\",\n        }}\n      >\n        todos\n      </h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React, { useState } from \"react\"\nimport { FaPlusCircle } from \"react-icons/fa\"\n\nconst InputTodo = (props) => {\n  const [inputText, setInputText] = useState({\n    title: \"\",\n  })\n\n  const onChange = e => {\n    setInputText({\n      ...inputText,\n      [e.target.name]: e.target.value,      //e contains valuable info\n    })\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (inputText.title.trim()) {           //trim is used to remove whitespace\n      props.addTodoProps(inputText.title);\n      setInputText({\n        title: \"\"\n      })\n    } else { alert(\"Please write item\") }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form-container\">\n      <input\n        type=\"text\"\n        className=\"input-text\"\n        placeholder=\"Add todo...\"\n        value={inputText.title}\n        name=\"title\"\n        onChange={onChange}\n      />\n      <button className=\"input-submit\">\n        <FaPlusCircle\n          style={{ color: \"darkcyan\", fontSize: \"20px\", marginTop: \"2px\" }}\n        />\n      </button>\n    </form>\n  )\n}\n\nexport default InputTodo\n","import React, { useState } from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport { MdClose } from \"react-icons/md\"\nimport { FiMenu } from \"react-icons/fi\"\n\nconst Navbar = () => {\n  const [navbarOpen, setNavbarOpen] = useState(false)\n\n  const links = [\n    {\n      id: 1,\n      path: \"/\",\n      text: \"Home\",\n    },\n    {\n      id: 2,\n      path: \"/about\",\n      text: \"About\",\n    },\n  ]\n\n  //could use setNavbarOpen(!navbarOpen) but it may\n  //depend on the previous value, so not reliable\n  const handleToggle = () => {\n    setNavbarOpen((prev) => !prev)\n  }\n\n  const closeMenu = () => {\n    setNavbarOpen(false)\n  }\n\n  //<Link> and <NavLink> are used in single-page apps so that the page\n  //doesnt refresh upon naviating to another page\n  //add a showMenu class to the ul only if the state variable navbarOpen is true else remove the class.\n  return (\n    <nav className=\"navBar\">\n      <button onClick={handleToggle}>\n        {navbarOpen ?\n          (<MdClose style={{ color: \"#fff\", width: \"40px\", height: \"40px\" }} />) :\n          (<FiMenu style={{ color: \"#7b7b7b\", width: \"40px\", height: \"40px\" }} />)\n        }\n      </button>\n      <ul className={`menuNav${navbarOpen ? \" showMenu\" : \"\"}`}>\n        {links.map(link => {\n          return (\n            <li key={link.id}>\n              <NavLink\n                to={link.path}\n                activeClassName='active-link'\n                onClick={() => closeMenu()}\n                exact>\n                  {link.text}\n              </NavLink>\n            </li>\n          )\n        })}\n      </ul>\n    </nav>\n  )\n}\n\nexport default Navbar\n","//useState and useEffect allow state changes within function components\nimport React, { useState, useEffect } from \"react\"\n\n//Route provides different routes (pages) to navigate to and Switch\n//wraps all the <Route> elements, looks through them and then\n//renders the first child whose path matches the current URL.\nimport { Route, Switch } from \"react-router-dom\"\n\n//import routes\nimport About from \"/Users/sampippen/react-to-do/src/pages/About\"\nimport NotMatch from \"/Users/sampippen/react-to-do/src/pages/NotMatch\"\n\n//import other components\nimport TodosList from \"./TodosList\"\nimport Header from \"./Header\"\nimport InputTodo from \"./InputTodo\"\nimport Navbar from \"./Navbar\"\n\n//import library to generate unique id's for components\nimport { v4 as uuidv4 } from \"uuid\";\n\n//function component rather than a class component\n//reason: no more using \"this\" and this.setState\nconst TodoContainer = () => {\n  //todos is local variable that represents the todos state variable\n  //setTodos is the function returned by useState() that will allow\n  //you to \"set the state\" of todos\n  const [todos, setTodos] = useState(getInitialTodos());\n\n  //this function replaced a useEffect() function\n  function getInitialTodos() {\n    //getting stored items\n    const temp = localStorage.getItem(\"todos\");\n    const savedTodos = JSON.parse(temp)\n    return savedTodos || [] //empty array because no dependencies are used\n  }\n\n  //no need to use prevState because useEffect() takes care of that\n  //todos is modified, so it is listed as a dependency\n  useEffect(() => {\n    //storing todos item as JSON objects\n    const temp = JSON.stringify(todos)\n    localStorage.setItem(\"todos\", temp)\n  }, [todos])\n\n  //do not use this.state because it may not be accurate\n  const handleChange = (id) => {\n    setTodos(prevState =>\n      prevState.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          }\n        }\n        return todo;\n      })\n    );\n  };\n\n  const delTodo = (id) => {\n    setTodos([\n        ...todos.filter(todo => {    //(…) allows us to grab the current todos item(s) at every point\n          return todo.id !== id;     //filter works much like map in that it loops through all fields in array and returns new array\n        }),\n    ])\n  }\n\n  //start w/ console.log(title) to make sure the function is being executed then actually implement the function\n  const addTodoItem = (title) => {\n    const newTodo = {\n      id: uuidv4(),\n      title: title,\n      completed: false\n    }\n    setTodos([...todos, newTodo])    //...this.state.todos selects all todos. ,newTodo selects the todo to be added\n  }\n\n  const setUpdate = (updatedTitle, id) => {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          todo.title = updatedTitle;\n        }\n        return todo\n      })\n    )\n  }\n\n    //React Fragment: used to render multiple JSX (<> and </>)\n    //<Route path=\"/about\" component={About} />\n    return (\n      <>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <div className=\"container\">\n              <div className=\"inner\">\n                <Header />\n                <InputTodo addTodoProps={addTodoItem} />\n                <TodosList\n                  todos={todos}\n                  handleChangeProps={handleChange}\n                  deleteTodoProps={delTodo}\n                  setUpdate={setUpdate}\n                  />\n              </div>\n            </div>\n          </Route>\n\n          <Route path=\"/about\">\n            <About />\n          </Route>\n\n          <Route path=\"*\">\n            <NotMatch />\n          </Route>\n        </Switch>\n      </>\n    )\n}\n\nexport default TodoContainer\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\n//component file\nimport TodoContainer from \"./functionBased/components/TodoContainer\"\n\n//stylesheet\nimport \"./functionBased/App.css\"\n\n//wrap top-level app in <Router> so that you can navigate to other pages within app\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <TodoContainer />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}